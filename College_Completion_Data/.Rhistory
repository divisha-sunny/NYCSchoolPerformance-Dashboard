growth = c(9.2, 9.4, 8.9, 8.5, 9.2, 8.9, 7.1, 7.2, 8.5, 5.5, 5.8, 7.6)
)
# Perform two-way ANOVA test
library(car)
plant_growth_anova <- aov(growth ~ grow_light * plant_food, plant_growth)
summary(plant_growth_anova)
setwd("C:/Users/chowd/Documents/NEU/2nd quarter/Communications and Visualizations")
library(readr)
baseball<- read_csv("baseball.csv", show_col_types = FALSE)
dim(baseball)
head(baseball, n=5)
str(baseball)
describe(baseball)
library(psych)
describe(baseball)
summary(housing)
summary(baseball)
is.null(baseball)
library(ggplot2)
ggplot(baseball, aes(x = Team, y = Playoffs, color = Team, size = Playoffs)) +
geom_point() +
ggtitle("Median House Value by Geographical Location and Distance from Coast") +
xlab("Latitude") +
ylab("Longitude") +
scale_color_gradient(name = "Median House Value", low = "blue", high = "red")
library(ggplot2)
ggplot(baseball, aes(x = Team, y = Playoffs, color = Team, size = League)) +
geom_point() +
ggtitle("Median House Value by Geographical Location and Distance from Coast") +
xlab("Latitude") +
ylab("Longitude") +
scale_color_gradient(name = "Median House Value", low = "blue", high = "red")
library(ggplot2)
ggplot(baseball, aes(x=Team, fill=RA)) +
geom_bar(position="fill")
labs(y="Proportion")
library(ggplot2)
ggplot(baseball, aes(x=Team, fill=RA)) +
geom_point(position="fill")
library(ggplot2)
ggplot(baseball, aes(x=Team, fill=RA)) +
geom_histogram(position="fill")
library(ggplot2)
ggplot(baseball, aes(x=Team, fill=RA)) +
geom_bar(position="fill")
labs(y="Proportion")
# Extract decade from year
bb$Decade <- bb$Year - (bb$Year %% 10)
# Extract decade from year
baseball$Decade <- baseball$Year - (baseball$Year %% 10)
wins <- baseball %>%
group_by(Decade) %>%
summarize(wins = sum(W)) %>%
as.tibble()
# Extract decade from year
library(dpylr)
# Extract decade from year
library(dplyr)
baseball$Decade <- baseball$Year - (baseball$Year %% 10)
wins <- baseball %>%
group_by(Decade) %>%
summarize(wins = sum(W)) %>%
as.tibble()
# Extract decade from year
library(dplyr)
library(tibble)
baseball$Decade <- baseball$Year - (baseball$Year %% 10)
wins <- baseball %>%
group_by(Decade) %>%
summarize(wins = sum(W)) %>%
as.tibble()
# Extract decade from year
library(dplyr)
library(tibble)
baseball$Decade <- baseball$Year - (baseball$Year %% 10)
wins <- baseball %>%
group_by(Decade) %>%
summarize(wins = sum(W)) %>%
as_tibble()
# Extract decade from year
library(dplyr)
library(tibble)
baseball$Decade <- baseball$Year - (baseball$Year %% 10)
wins <- baseball %>%
group_by(Decade) %>%
summarize(wins = sum(W)) %>%
as_tibble()
baseball$Decade
is.null(baseball)
# Set up the plot window
par(mfrow=c(3,5)) # 3 rows and 3 columns
# Create a for loop to plot box plots for each column
for (i in 1:ncol(baseball)) {
boxplot(baseball[,i], main = colnames(baseball)[i])
}
library(ggplot2)
lapply(housing, function(x) {
ggplot(data = as.data.frame(x), aes(x=x)) +
geom_boxplot()
})
library(ggplot2)
lapply(baseball, function(x) {
ggplot(data = as.data.frame(x), aes(x=x)) +
geom_boxplot()
})
library(gridExtra)
plots <- lapply(housing, function(x) {
ggplot(data = as.data.frame(x), aes(x=x)) +
geom_boxplot()
})
library(gridExtra)
plots <- lapply(baseball, function(x) {
ggplot(data = as.data.frame(x), aes(x=x)) +
geom_boxplot()
})
grid.arrange(grobs = plots, ncol=3)
# Generate histograms for the numerical columns
ggplot(data = df, aes(x = RS)) + geom_histogram(bins = 30)
# Generate histograms for the numerical columns
ggplot(data = baseball, aes(x = RS)) + geom_histogram(bins = 30)
ggplot(data = baseball, aes(x = RA)) + geom_histogram(bins = 30)
ggplot(data = baseball, aes(x = W)) + geom_histogram(bins = 30)
# Generate bar plots for the categorical columns
ggplot(data = baseball, aes(x = Team)) + geom_bar()
ggplot(data = baseball, aes(x = League)) + geom_bar()
ggplot(data = baseball, aes(x = Year)) + geom_bar()
ggplot(data = baseball, aes(x = Playoffs)) + geom_bar()
# Generate scatter plots to check the relationship between numerical columns
ggplot(data = baseball, aes(x = RS, y = RA)) + geom_point()
ggplot(data = baseball, aes(x = OBP, y = SLG)) + geom_point()
ggplot(data = baseball, aes(x = OOBP, y = OSLG)) + geom_point()
plot(baseball$RD, baseball$W, xlab="Run Difference", ylab="Wins", pch=19, col="red", main="RD Vs Wins")
# Generate scatter plots to check the relationship between numerical columns
ggplot(data = baseball, aes(x = RS, y = RA)) + geom_point()
ggplot(data = baseball, aes(x = OBP, y = SLG)) + geom_point()
ggplot(data = baseball, aes(x = OOBP, y = OSLG)) + geom_point()
# Generate scatter plots to check the relationship between numerical columns
ggplot(data = baseball, aes(x = W, y = RA)) + geom_point()
ggplot(data = baseball, aes(x = OBP, y = SLG)) + geom_point()
ggplot(data = baseball, aes(x = OOBP, y = OSLG)) + geom_point()
# Generate scatter plots to check the relationship between numerical columns
ggplot(data = baseball, aes(x = W, y = RA)) + geom_point()
ggplot(data = baseball, aes(x = W, y = RS)) + geom_point()
ggplot(data = baseball, aes(x = W, y = RA)) + geom_point()
ggplot(data = baseball, aes(x = W, y = RS)) + geom_point()
ggplot(data = baseball, aes(x = W, y = RS)) + geom_point()
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = teams_data, aes(x = Team, y = W)) +
geom_bar(stat = "identity") +
xlab("Team") +
ylab("Wins") +
ggtitle("Number of wins by team")
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = W)) +
geom_bar(stat = "identity") +
xlab("Team") +
ylab("Wins") +
ggtitle("Number of wins by team")
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = W, colour = "Blue")) +
geom_bar(stat = "identity") +
xlab("Team") +
ylab("Wins") +
ggtitle("Number of wins by team")
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = W, colour = "Red")) +
geom_bar(stat = "identity") +
xlab("Team") +
ylab("Wins") +
ggtitle("Number of wins by team")
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = W)) +
geom_bar(stat = "identity", colour = "Red") +
xlab("Team") +
ylab("Wins") +
ggtitle("Number of wins by team")
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = W)) +
geom_bar(stat = "identity", colour = "Red", fill="Red") +
xlab("Team") +
ylab("Wins") +
ggtitle("Number of wins by team")
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = W)) +
geom_bar(stat = "identity", colour = "Red", fill="Blue") +
xlab("Team") +
ylab("Wins") +
ggtitle("Number of wins by team")
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = W)) +
geom_bar(stat = "identity", colour = "Blue", fill="Blue") +
xlab("Team") +
ylab("Wins") +
ggtitle("Number of wins by team")
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = Playoffs)) +
geom_bar(stat = "identity", colour = "Blue", fill="Orange") +
xlab("Team") +
ylab("Playoffs") +
ggtitle("Number of times a team went into playoffs")
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = Playoffs)) +
geom_bar(stat = "identity", colour = "Orange", fill="Orange") +
xlab("Team") +
ylab("Playoffs") +
ggtitle("Number of times a team went into playoffs")
library(dplyr)
# group data by year and find the team with the highest number of wins for each year
team_wins_by_year <- teams_data %>%
group_by(Year) %>%
summarise(team_with_highest_wins = Team[which.max(W)])
library(dplyr)
# group data by year and find the team with the highest number of wins for each year
team_wins_by_year <- baseball %>%
group_by(Year) %>%
summarise(team_with_highest_wins = Team[which.max(W)])
# view the resulting data frame
team_wins_by_year
# load necessary packages
library(ggplot2)
# create a bar chart
ggplot(data = team_wins_by_year, aes(x = Year, y = team_with_highest_wins)) +
geom_bar(stat = "identity") +
xlab("Year") +
ylab("Team with highest wins") +
ggtitle("Team with highest wins each year")
baseball <- baseball %>%
group_by(team) %>%
summarize(wins = sum(win),
games = n(),
winning_percentage = wins / games)
baseball <- baseball %>%
group_by(Team) %>%
summarize(wins = sum(win),
games = n(),
winning_percentage = wins / games)
baseball <- baseball %>%
group_by(Team) %>%
summarize(wins = sum(win),
games = n(),
winning_percentage = W / games)
baseball <- baseball %>%
group_by(Team) %>%
summarize(wins = sum(W),
games = n(),
winning_percentage = wins / games)
# Create a scatter plot to visualize the relationship
ggplot(baseball, aes(x = BA, y = winning_percentage)) +
geom_point() +
xlab("Batting Average") +
ylab("Winning Percentage")
ggplot(data = baseball, aes(x = W, y = BA)) + geom_point()
#Setting significance level
alpha6 <- 0.10
#Vector for probabilities and observed values
observed6 <- c(12,8,24,6)
result6 <- chisq.test(x=observed6, p=c(0.2,0.28,0.36,0.16))
result6
ifelse(result6$p.value>alpha, "Fail to reject the NULL Hypothesis", "Reject the NULL hypothesis")
#Setting significance level
alpha8 <- 0.05
#Vector for probabilities and observed values
observed8 <- c(125,10,24,25)
result8 <- chisq.test(x=observed8, p=c(0.708,0.082,0.09,0.12))
result8
ifelse(result8$p.value>alpha, "Fail to reject the NULL Hypothesis", "Reject the NULL hypothesis")
#Setting significance level
alpha8_2 <- 0.05
#Create one vector for each row
r1_8 <- c(724,335,174,107)
r2_8 <- c(370,292,152,140)
matrix8 <- matrix(c(r1_8, r2_8), nrow = 2, byrow = TRUE)
rownames(matrix8) <- c("2013", "2014")
colnames(matrix8) <- c("Caucasian", "Hispanic", "African American", "Other")
matrix8
#Running the test and results
result8_2 <- chisq.test(matrix8)
result8_2
ifelse(result8_2$p.value>alpha, "Fail to reject the NULL Hypothesis", "Reject the NULL hypothesis")
#Setting significance level
alpha10 <- 0.05
#Create one vector for each row
r1_10 <- c(10791, 62491)
r2_10 <- c(7891, 42750)
r3_10 <- c(932, 9525)
r4_10 <- c(11819, 54344)
matrix10 <- matrix(c(r1_10, r2_10, r3_10, r4_10), nrow = 4, byrow = TRUE)
rownames(matrix10) <- c("Army", "Navy", "Marine Corps", "Air Force")
colnames(matrix10) <- c("Officers", "Enlisted")
matrix10
#Running the test and results
result10 <- chisq.test(matrix10)
result10
ifelse(result10$p.value>alpha, "Fail to reject the NULL Hypothesis", "Reject the NULL hypothesis")
alpha <- 0.05
condiments <- data.frame('sodium' = c(270, 130, 230, 180, 80, 70, 200), food = rep('condiments', 7), stringsAsFactors = FALSE)
cereals <- data.frame('sodium' = c(260, 220, 290, 290, 200, 320, 140), food = rep('cereals', 7), stringsAsFactors = FALSE)
desserts <- data.frame('sodium' = c(100, 180, 250, 250, 300, 360, 300, 160), food = rep('desserts', 8), stringsAsFactors = FALSE)
#combine the data vectors into one
sodium <- rbind(condiments, cereals, desserts)
sodium$food <- as.factor(sodium$food)
#Run the test results
anova <- aov(sodium~food, data = sodium)
summary(anova)
#saving summary as an object
a.summary <- summary(anova)
#p-value
p_value <- a.summary[[1]][1,"Pr(>F)"]
ifelse(p_value>alpha, "Fail to reject the NULL Hypothesis", "Reject the NULL hypothesis")
TukeyHSD(anova)
alpha_10 <- 0.01
cereal <- data.frame('sales' = c(578, 320, 264, 249, 237), company = rep('cereal', 5), stringsAsFactors = FALSE)
chocolate_candy <- data.frame('sales' = c(311, 106, 109, 125, 173), company = rep('chocolate_candy', 5), stringsAsFactors = FALSE)
coffee <- data.frame('sales' = c(261, 185, 302, 689), company = rep('coffee', 4), stringsAsFactors = FALSE)
#combine the data vectors into one
sales <- rbind(cereal, chocolate_candy, coffee)
sales$company <- as.factor(sales$company)
#Run the test results
anova10 <- aov(sales~company, data = sales)
summary(anova10)
#saving summary as an object
a.summary <- summary(anova10)
#p-value
p_value_12 <- a.summary[[1]][1,"Pr(>F)"]
ifelse(p_value_12>alpha, "Fail to reject the NULL Hypothesis", "Reject the NULL hypothesis")
alpha_12 <- 0.05
Eastern_third <- data.frame('expenditure' = c(4946, 5953, 6202, 7243, 6113), region = rep('Eastern_third', 5), stringsAsFactors = FALSE)
Middle_third <- data.frame('expenditure' = c(6149, 7451, 6000, 6479), region = rep('Middle_third', 4), stringsAsFactors = FALSE)
Western_third <- data.frame('expenditure' = c(5282, 8605, 6528, 6911), region = rep('Western_third', 4), stringsAsFactors = FALSE)
#combine the data vectors into one
expenditure <- rbind(Eastern_third, Middle_third, Western_third)
expenditure$region <- as.factor(expenditure$region)
#Run the test results
anova12 <- aov(expenditure~region, data = expenditure)
summary(anova12)
#saving summary as an object
a.summary <- summary(anova12)
#p-value
p_value_12 <- a.summary[[1]][1,"Pr(>F)"]
ifelse(p_value_12>alpha_12, "Fail to reject the NULL Hypothesis", "Reject the NULL hypothesis")
# Create dataframe with the plant growth data
plant_growth <- data.frame(
grow_light = c(rep("Grow-light 1", 6), rep("Grow-light 2", 6)),
plant_food = c(rep(c("Plant food A", "Plant food B"), 3), rep(c("Plant food A", "Plant food B"), 3)),
growth = c(9.2, 9.4, 8.9, 8.5, 9.2, 8.9, 7.1, 7.2, 8.5, 5.5, 5.8, 7.6)
)
# Perform two-way ANOVA test
library(car)
plant_growth_anova <- aov(growth ~ grow_light * plant_food, plant_growth)
summary(plant_growth_anova)
setwd("C:/Users/chowd/Documents/NEU/2nd quarter/Communications and Visualizations")
library(readr)
baseball<- read_csv("baseball.csv", show_col_types = FALSE)
dim(baseball)
head(baseball, n=5)
str(baseball)
library(psych)
describe(baseball)
summary(baseball)
is.null(baseball)
library(gridExtra)
plots <- lapply(baseball, function(x) {
ggplot(data = as.data.frame(x), aes(x=x)) +
geom_boxplot()
})
grid.arrange(grobs = plots, ncol=3)
ggplot(data = baseball, aes(x = W, y = RA)) + geom_point()
ggplot(data = baseball, aes(x = W, y = RS)) + geom_point()
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = W)) +
geom_bar(stat = "identity", colour = "Blue", fill="Blue") +
xlab("Team") +
ylab("Wins") +
ggtitle("Number of wins by team")
# load necessary packages
library(ggplot2)
# create bar graph
ggplot(data = baseball, aes(x = Team, y = Playoffs)) +
geom_bar(stat = "identity", colour = "Orange", fill="Orange") +
xlab("Team") +
ylab("Playoffs") +
ggtitle("Number of times a team went into playoffs")
ggplot(data = baseball, aes(x = W, y = BA)) + geom_point()
# Create a variable for the decade
data$decade <- floor((baseball$year-1962)/10)*10+1962
# Create a variable for the decade
baseball$decade <- floor((baseball$year-1962)/10)*10+1962
# Load the necessary library
library(chisq.test)
# Create a variable for the decade
baseball$decade <- floor((baseball$Year-1962)/10)*10+1962
# Calculate the expected frequencies for each decade
expected <- baseball %>%
group_by(decade) %>%
summarize(wins = sum(W)) %>%
mutate(total = sum(wins)) %>%
mutate(expected = total/n())
# Calculate the observed frequencies for each decade
observed <- baseball %>%
group_by(decade) %>%
summarize(wins = sum(W))
# Perform the Chi-Square Goodness-of-Fit test
chisq.test(observed$wins, p = expected$expected)
expected$expected
# Calculate the observed frequencies of wins by decade
obs <- table(baseball$decade, data$W)
# Calculate the observed frequencies of wins by decade
obs <- table(baseball$decade, baseball$W)
# Calculate the total number of wins
total_wins <- sum(obs)
# Calculate the proportion of wins for each decade
prop <- rowSums(obs)/total_wins
# Calculate the expected frequencies of wins by decade
exp <- prop*total_wins
# Perform the chi-square test
result <- chisq.test(obs, p = exp)
result
# Calculate the observed frequencies of wins by decade
obs <- table(baseball$decade, baseball$W)
# Calculate the total number of wins
total_wins <- sum(obs)
# Calculate the proportion of wins for each decade
prop <- rowSums(obs)/total_wins
# Calculate the expected frequencies of wins by decade
exp <- prop*total_wins
# Perform the chi-square test
result <- chisq.test(obs, p = exp)
result
# Calculate the observed frequencies of wins by decade
obs <- table(baseball$decade, baseball$W)
# Calculate the total number of wins
total_wins <- sum(obs)
# Calculate the proportion of wins for each decade
prop <- rowSums(obs)/total_wins
# Calculate the expected frequencies of wins by decade
exp <- prop*total_wins
# Perform the chi-square test
result_chi <- chisq.test(obs, p = exp)
result_chi
critical_value <- qchisq(0.95, df = ncol(obs)-1)
critical_value
test_statistic <- result$statistic
p_value_chi <- result$p.value
test_statistic
p_vlaue_chi
test_statistic <- result$statistic
p_value_chi <- result$p.value
test_statistic
p_value_chi
# Make the decision
if(test_statistic > critical_value) {
print("Fail to reject the null hypothesis")
print(paste("p-value: ", p_value_chi))
} else {
print("Reject the null hypothesis")
print(paste("p-value: ", p_value_chi))
}
alpha_chi <- 0.05
test_statistic <- result$statistic
p_value_chi <- result$p.value
test_statistic
p_value_chi
ifelse(p_value_chi>alpha_chi, "Fail to reject the NULL Hypothesis", "Reject the NULL hypothesis")
setwd("C:/Users/chowd/Documents/NEU/2nd quarter/Intermediate Analysis")
library(readr)
crop_data<- read_csv("crop_data.csv", show_col_types = FALSE)
head(crop_data, n=5)
# Calculate the observed frequencies of wins by decade
obs <- table(baseball$decade, baseball$W)
# Calculate the total number of wins
total_wins <- sum(obs)
# Calculate the proportion of wins for each decade
prop <- rowSums(obs)/total_wins
# Calculate the expected frequencies of wins by decade
exp <- prop*total_wins
# Perform the chi-square test
result_chi <- chisq.test(obs, p = exp)
result_chi
result_anova <- aov(yield ~ fertilizer*density + Error(block), data = baseball)
result_anova <- aov(yield ~ fertilizer*density + Error(block), data = crop_data)
result_anova
result_anova <- aov(yield ~ fertilizer*density + Error(block), data = crop_data)
summary(result_anova)
#Setting significance level
alpha8 <- 0.05
#Vector for probabilities and observed values
observed8 <- c(125,10,25,40)
result8 <- chisq.test(x=observed8, p=c(0.708,0.082,0.09,0.12))
result8
ifelse(result8$p.value>alpha, "Fail to reject the NULL Hypothesis", "Reject the NULL hypothesis")
